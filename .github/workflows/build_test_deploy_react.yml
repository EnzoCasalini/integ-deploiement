name: Build, Test, Deploy React & FastAPI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies and run coverage (React)
        working-directory: ./my-react-app
        run: |
          npm ci
          npm run coverage
          npm run jsdoc
          npm run build --if-present

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload dist for GitHub Pages
        uses: actions/upload-artifact@v4
        with:
          name: github-pages-dist
          path: my-react-app/dist

  e2e:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./my-react-app
        run: npm ci

      - name: Install and run Cypress
        working-directory: ./my-react-app
        run: |
          npx cypress install
          npx cypress run

  deploy_pages:
    needs: build_test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Download dist from previous job
        uses: actions/download-artifact@v4
        with:
          name: github-pages-dist
          path: dist

      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  deploy_npm:
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Babel dependencies
        run: npm install --save-dev @babel/core @babel/cli @babel/preset-env @babel/preset-react

      - name: Build package for npm
        run: npm run build-npm-ci
        working-directory: ./my-react-app

      - name: Configure Git
        run: |
          git config --global user.email "enzocasa83@gmail.com"
          git config --global user.name "EnzoCasalini"

      - name: Setup npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Check if version already published
        run: |
          PKG_NAME=$(node -p "require('./my-react-app/package.json').name")
          PKG_VERSION=$(node -p "require('./my-react-app/package.json').version")
          if npm view "$PKG_NAME@$PKG_VERSION" > /dev/null 2>&1; then
            echo "Version $PKG_VERSION already exists on NPM. Skipping publish."
            exit 1
          fi

      - name: Publish on NPM
        run: npm publish
        working-directory: ./my-react-app
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}